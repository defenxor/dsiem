filter {
  if [application] == "syslog" and [program] == "ossec" {
    date {
      match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "timestamp"
    }
    json {
      source => "message"
    }
    mutate {
      strip => [ "classification" ]
    }
    mutate {
      split => { "classification" => "," }
    }
    mutate {
      gsub => [
        "md5_old", "'", "",
        "md5_new", "'", "",
        "sha1_old", "'", "",
        "sha1_new", "'", ""
      ]
    }

    # in real environment, the following mutate and dns filter should be replaced
    # with something that maps ossec agents to the host they're protecting -- which are
    # likely to be the same
    mutate {
      add_field => { "hostname" => "shellshock" }
    }
    dns {
        resolve => [ "hostname" ]
        action => "replace"
        add_field => { "dst_ip" => "%{hostname}" }
    }

    mutate {
      remove_field => [ "tags", "@version", "priority", "logsource", "hostname" ]
    }
  }
}

